// I wanted to create a simple modal that would not rely on a library (like Foundation, Semantic, Bootstrap, etc), since those can often feel bloated and/or somewhat difficult to style. This also allow you to pass "data-" parameters for content and a couple of settings for the modal. This example is set up to allow you to look at the JS, CSS, and html markup...and learn from it. Sure, you can use as is - but dang, think of what you can do to make it better. Add some more data-attributes, transform effects, etc. Enjoy.






// breakpoints

$XS:     320px;
$S:     414px;
$M:     769px;
$L:     1025px;
$XL:     1401px;

// media queries

@mixin MQ($canvas) {
  @if $canvas == XS {
   @media only screen and (min-width: $XS) { @content; }
  }
  @if $canvas == S {
   @media only screen and (min-width: $S) { @content; }
  }
  @else if $canvas == M {
   @media only screen and (min-width: $M) { @content; }
  }
  @else if $canvas == L {
   @media only screen and (min-width: $L) { @content; }
  }
  @else if $canvas == XL {
   @media only screen and (min-width: $XL) { @content; }
  }
}



// Paddings
$sm_header_height: 40px;
$sm_content_padding: 15px;

// Inner Modal Color
$segment_color: #ffffff;
$segmentborder_color: #ffffff;

// Fonts
$primary-font: "Montserrat", sans-serif;
$maintextcolor: #404040;

//Colors
$red: #EF798A;
$tan: #E1D59A;
$green: #a9cd99;

// rem fallback - credits: http://zerosixthree.se/

@mixin transition($what, $speed, $ease, $delay) {
    -webkit-transition: $what $speed $ease $delay;
    -moz-transition: $what $speed $ease $delay;
    -ms-transition: $what $speed $ease $delay;
    -o-transition: $what $speed $ease $delay;
    transition: $what $speed $ease $delay;
}


// generic transform
@mixin transform($transforms) {
     -moz-transform: $transforms;
       -o-transform: $transforms;
      -ms-transform: $transforms;
  -webkit-transform: $transforms;
          transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
   @include transform(scale($scale));
}
// translate
@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}


@mixin box-shadow($top, $left, $blur, $depth, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $depth $color;
    -moz-box-shadow:inset $top $left $blur $depth $color;
    box-shadow:inset $top $left $blur $depth $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $depth $color;
    -moz-box-shadow: $top $left $blur $depth $color;
    box-shadow: $top $left $blur $depth $color;
  }
}
// border radius

@mixin border-radius($radius) {
  border-radius: $radius;
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  -o-border-radius: $radius;
}

.wrapper {
	text-align: center;
	display: flex;
	align-items: center;
	justify-content: center;
	height: 100%;
	.holdmystuff {
		background: #ffffff;
		max-width: 60%;
		padding: 40px;
    @include border-radius(6px);
		@include box-shadow(0px, 0px, 80px, 0px, rgba(30,30,30,0.2));
		font-size: .9em;
		.holder_svg {
			svg {
				max-width: 40%;
			}
			padding-bottom: 25px;
			border-bottom: 1px solid #efefef;
			margin-bottom: 25px
		}
		p {
			padding-bottom: 20px;
			margin: 0 auto;
		}
		ul {
			padding: 0px;
			margin: 0 auto;
			list-style-type: none;
			li {
				display: inline-block;
				margin: 0 auto;
				background: #e9e9e9;
				color: #303030;
				padding: 10px;
				text-decoration: none;
				margin-bottom: 1px;
				a {
					display: table-cell;
				}
			}
			}
		}
}



// This is just a straightforward flexbox-based modal you can use as is, or to learn from and build-upon. I became frustrated doing over-ride css with the framework libraries out there (Foundation, Bootstrap, Semantic UI, etc.).

// OVERLAY
.slim_modal {
	position: fixed;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	@include flexbox;
	@include align-items(center);
	@include justify-content(center);
	background: rgba(0,0,0,0.85);
	z-index: 2;
	display: none;
	font-size: 1em;
	@include transition(background, .5s, ease, .06s);
	&.none {
		background: rgba(10,10,10,0.0);;
	}
	&.red {
		background: rgba(darken($red, 20%) ,.8);
	}
	&.tan {
		background: rgba(darken($tan, 20%), .8);
	}
	&.green {
		background: rgba(darken($green, 20%), .8);
	}
	// MODAL ITSELF
	.sm_content {
		@include MQ(XS) {padding: 0px;width: 100%;height: 100%;@include border-radius(0px);}
		@include MQ(S) {padding: 0px;width: 100%;height: 100%;@include border-radius(0px);}
		@include MQ(M) {padding: $sm_content_padding;width: 80%; max-height: 90%; height: auto;@include border-radius(4px);}
		@include MQ(L) {padding: $sm_content_padding;width: 80%;max-height: 90%; height: auto; @include border-radius(4px);}
		@include MQ(XL) {padding: $sm_content_padding;width: 80%;max-height: 90%; height: auto; @include border-radius(4px);}
		background: darken($segment_color, 4%);
		text-align: center;
		max-width: 800px;

		// MODAL INNER SECTION
		.sm_content_inner_wrap {
			position: relative;
			margin: 0 auto;
			height: 50%;
			background: #ffffff;
			@include box-shadow(0px, 0px, 1px, 0, rgba(30,30,30, .5));
			z-index: 2;
			@include MQ(XS) {@include border-radius(0px);}
			@include MQ(S) {@include border-radius(0px);}
			@include MQ(M) {@include border-radius(4px);}
			@include MQ(L) {@include border-radius(4px);}
			@include MQ(XL) {@include border-radius(4px);}
			.sm_close_button {
				padding: 10px;
				width: auto;
				display: block;
				background: #efefef;
			}
			// MODAL AREAS
			.sm_area_top, .sm_area_bottom, .sm_area_all {
				padding: 4em;
				h3 {
					span {
						display: block;
						font-size: .7em;
					}
				}
			}
			.sm_area_top {
				background: rgba(30,30,30, .02);
			}
			.sm_area_bottom {
				background: rgba(255,255,255, 1);
			}
    }

		// MODAL - Slide out icon menu...including a close button (".sm_close").
		.sm_icon_menu {
			ul {
				list-style-type: none;
				padding: 0;
				margin: 0 auto;
				li {
					font-size: 1.1em;
					height: 3em;
					line-height: 3em;
					background: darken(#ffffff, 10%);
					padding: 0px 8px 0px 8px;
					margin-bottom:1px;
					color: rgba(30,30,30, .4);
					@include transition(all, .5s, ease, 0s);
					&.sm_close {
						background: #ffffff;
					}
					&:nth-child(2) {
						margin-top: 10px;
					}
					&:hover {
						background: #ffffff;
						color: rgba(30,30,30, .7);
					}
					&::last-child {
						border: none;
					}
				}
			}
			&.is_right {
				right: 0px;
				@include border-radius(0px 4px 4px 0px);
				@include MQ(XS) {top: 70px;right: 0px;z-index: 9;@include box-shadow(0px, 0px, 0px, 0px, rgba(30,30,30,0.0));padding: 1px;border: none;}
				@include MQ(S) {top: 70px;right: 0px;z-index: 9;@include box-shadow(0px, 0px, 0px, 0px, rgba(30,30,30,0.0));padding: 1px;border: none;}
				@include MQ(M) {top: $sm_content_padding;right: ($sm_content_padding );z-index: 1;@include box-shadow(15px, 0px, 30px, 0px, rgba(30,30,30,0.2));border: 1px solid rgba(30,30,30, .1);border-left: none;}
				@include MQ(L) {top: $sm_content_padding;right: ($sm_content_padding);z-index: 1;@include box-shadow(15px, 0px, 30px, 0px, rgba(30,30,30,0.2));border: 1px solid rgba(30,30,30, .1);border-left: none;}
				@include MQ(XL) {top: $sm_content_padding;right: ($sm_content_padding);z-index: 1;@include box-shadow(15px, 0px, 30px, 0px, rgba(30,30,30,0.2));border: 1px solid rgba(30,30,30, .1);border-left: none;}
			}
			&.is_left {
				@include border-radius(4px 0px 0px 4px);
				@include MQ(XS) {top: 70px;left: 0px;z-index: 9;@include box-shadow(0px, 0px, 0px, 0px, rgba(30,30,30,0.0));padding: 1px;border: none;}
				@include MQ(S) {top: 70px;left: 0px;z-index: 9;@include box-shadow(0px, 0px, 0px, 0px, rgba(30,30,30,0.0));padding: 1px;border: none;}
				@include MQ(M) {top: $sm_content_padding;left: ($sm_content_padding );z-index: 1;@include box-shadow(-15px, 0px, 30px, 0px, rgba(30,30,30,0.2));border: 1px solid rgba(30,30,30, .1);border-right: none;}
				@include MQ(L) {top: $sm_content_padding;left: ($sm_content_padding);z-index: 1;@include box-shadow(-15px, 0px, 30px, 0px, rgba(30,30,30,0.2));border: 1px solid rgba(30,30,30, .1);border-right: none;}
				@include MQ(XL) {top: $sm_content_padding;left: ($sm_content_padding);z-index: 1;@include box-shadow(-15px, 0px, 30px, 0px, rgba(30,30,30,0.2));border: 1px solid rgba(30,30,30, .1);border-right: none;}
			}
			opacity: 1;
			box-sizing: border-box;
			position: absolute;
			top: 40px;
			background: darken($segment_color, 4%);
			@include transition(all, .3s, ease, 0s);
		}
		.sm_header {
			box-sizing: border-box;
			right: 0;
			left: 0;
			top: 0;
			bottom: 0;
			color: rgba(30,30,30, .7);
			text-transform: uppercase;
			margin: 0 auto;
			display: inline-block;
			height: $sm_header_height;
			line-height: $sm_header_height;
			opacity: 0;
			@include transition(all, .3s, ease, 0s);
			@include MQ(XS) {position: relative;width: 100%;background: darken(#ffffff, 10%);@include border-radius(0px);padding-top: 0;}
			@include MQ(S) {position: relative;width: 100%;background: darken(#ffffff, 10%);@include border-radius(0px);padding-top: 0;}
			@include MQ(M) {position: absolute;width: 90%;background: darken($segment_color, 4%);@include border-radius(4px 4px 0px 0px);padding-top: $sm_content_padding/2;text-align: center;}
			@include MQ(L) {position: absolute;width: 90%;background: darken($segment_color, 4%);@include border-radius(4px 4px 0px 0px);padding-top: $sm_content_padding/2;text-align: center;}
			@include MQ(XL) {position: absolute;width: 90%;background: darken($segment_color, 4%);@include border-radius(4px 4px 0px 0px);padding-top: $sm_content_padding/2;text-align: center;}
		}
		&.pushup {
			@include transform(scale(.98) translateY(20px));
			@include transition(all, .5s, ease, 0s);
			@include box-shadow(0px, 0px, 0px, 0px, rgba(30,30,30,0.4));
			opacity: 0;
			&.show {
				@include box-shadow(0px, 20px, 80px, 0px, rgba(30,30,30,0.4));
				opacity: 1;
			}
		}
		&.pushdown {
			@include transform(scale(.98) translateY(-20px));
			@include transition(all, .5s, ease, 0s);
			@include box-shadow(0px, 0px, 0px, 0px, rgba(30,30,30,0.4));
			opacity: 0;
			&.show {
				@include box-shadow(0px, -20px, 80px, 0px, rgba(30,30,30,0.4));
				opacity: 1;
			}
		}
		&.show {
			@include transform(scale(1));
			@include transition(all, .3s, ease, 0s);
			.sm_icon_menu {
				@include transition(all, .5s, ease, .06s);

				&.is_right {
					@include MQ(XS) {top: 70px;right: 0px;}
					@include MQ(S) {top: 70px;right: 0px;}
					@include MQ(M) {top: $sm_content_padding ;right: -25px;}
					@include MQ(L) {top: $sm_content_padding ;right: -25px;}
					@include MQ(XL) {top: $sm_content_padding;right: -25px;}
				}
				&.is_left {
					@include MQ(XS) {top: 70px;left: 0px;}
					@include MQ(S) {top: 70px;left: 0px;}
					@include MQ(M) {top: $sm_content_padding ;left: -25px;}
					@include MQ(L) {top: $sm_content_padding ;left: -25px;}
					@include MQ(XL) {top: $sm_content_padding;left: -25px;}
				}
			}
			.sm_header {
				@include transition(top, .5s, ease, .1s);
				@include MQ(XS) {top: 0px;z-index: 9;}
				@include MQ(S) {top: 0px;z-index: 9}
				@include MQ(M) {top: -$sm_header_height;z-index: 1;}
				@include MQ(L) {top: -$sm_header_height;z-index: 1;}
				@include MQ(XL) {top: -$sm_header_height;z-index: 1;}
				opacity: 1;
				&.detached {
					@include transition(opacity, .5s, ease, .1s);
					@include border-radius(4px);
					background: rgba(0,0,0, .9);
					color: rgba(255,255,255, .8);
					@include MQ(XS) {top: 0px;z-index: 9;}
					@include MQ(S) {top: 0px;z-index: 9}
					@include MQ(M) {top: -($sm_header_height + 20);padding-top: 0;z-index: 1}
					@include MQ(L) {top: -($sm_header_height + 20);padding-top: 0;z-index: 1}
					@include MQ(XL) {top: -($sm_header_height + 20);padding-top: 0;z-index: 1}
				}
			}
    }
  }
}

.sm_content {
 	&.red {
	background: $red;
	.sm_header {
			background: $red;
			color: #ffffff;
		}
	}
	&.tan {
	background: $tan;
	.sm_header{
			background: $tan;
			color: #ffffff;
		}
	}
	&.green {
		background: $green;
		.sm_header {
			background: $green;
			color: #ffffff;
		}
	}
}

